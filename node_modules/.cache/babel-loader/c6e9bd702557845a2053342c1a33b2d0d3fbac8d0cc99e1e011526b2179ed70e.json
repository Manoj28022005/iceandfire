{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ChangePassword(_ref){let{darkMode,showPassModal,setShowPassModal}=_ref;const[credentials,setCredentials]=useState({oldpassword:\"\",newpassword1:\"\",newpassword2:\"\"});const handleSubmit=async e=>{e.preventDefault();if(credentials.newpassword1!==credentials.newpassword2){alert(\"New passwords do not match.\");return;}try{const email=localStorage.getItem(\"email\");console.log(\"Auth Token:\",localStorage.getItem(\"authToken\"));console.log(\"Email:\",email);console.log(\"Request Body:\",{email,oldpassword:credentials.oldpassword,newpassword:credentials.newpassword1});const response=await fetch(\"http://localhost:5000/api/changePassword\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem(\"authToken\")},body:JSON.stringify({email:email,oldpassword:credentials.oldpassword,newpassword:credentials.newpassword1})});const json=await response.json();if(json.success){alert(\"Password updated successfully.\");setShowPassModal(false);}else{alert(\"Old password is incorrect or update failed.\");}}catch(error){console.error(\"Error:\",error);alert(\"An error occurred while updating the password.\");}};const onChange=event=>{setCredentials({...credentials,[event.target.name]:event.target.value});};return/*#__PURE__*/_jsx(_Fragment,{children:showPassModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal fade show\",tabIndex:\"-1\",role:\"dialog\",style:{display:'block'},\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog\",role:\"document\",children:/*#__PURE__*/_jsxs(\"div\",{className:`modal-content ${darkMode?'bg-dark text-light':'bg-light text-dark'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title\",children:\"Update Password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>setShowPassModal(false)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"oldpassword\",className:\"form-label\",children:\"Enter old password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"oldpassword\",name:\"oldpassword\",value:credentials.oldpassword,onChange:onChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newpassword1\",className:\"form-label\",children:\"Enter new password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"newpassword1\",name:\"newpassword1\",value:credentials.newpassword1,onChange:onChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newpassword2\",className:\"form-label\",children:\"Confirm new password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"newpassword2\",name:\"newpassword2\",value:credentials.newpassword2,onChange:onChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"m-3 btn btn-primary\",children:\"Submit\"})]})})]})})})});}export default ChangePassword;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChangePassword","_ref","darkMode","showPassModal","setShowPassModal","credentials","setCredentials","oldpassword","newpassword1","newpassword2","handleSubmit","e","preventDefault","alert","email","localStorage","getItem","console","log","newpassword","response","fetch","method","headers","body","JSON","stringify","json","success","error","onChange","event","target","name","value","children","className","tabIndex","role","style","display","type","onClick","onSubmit","htmlFor","id","required"],"sources":["D:/CODING/WEB_DEVELOPMENT/GOFOOD/mernapp/src/screens/ChangePassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChangePassword({ darkMode, showPassModal, setShowPassModal }) {\r\n  const [credentials, setCredentials] = useState({\r\n    oldpassword: \"\",\r\n    newpassword1: \"\",\r\n    newpassword2: \"\"\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (credentials.newpassword1 !== credentials.newpassword2) {\r\n      alert(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const email = localStorage.getItem(\"email\");\r\n      console.log(\"Auth Token:\", localStorage.getItem(\"authToken\"));\r\n      console.log(\"Email:\", email);\r\n      console.log(\"Request Body:\", {\r\n        email,\r\n        oldpassword: credentials.oldpassword,\r\n        newpassword: credentials.newpassword1\r\n      });\r\n\r\n      const response = await fetch(\"http://localhost:5000/api/changePassword\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": localStorage.getItem(\"authToken\"),\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          oldpassword: credentials.oldpassword,\r\n          newpassword: credentials.newpassword1\r\n        })\r\n      });\r\n\r\n      const json = await response.json();\r\n      if (json.success) {\r\n        alert(\"Password updated successfully.\");\r\n        setShowPassModal(false);\r\n      } else {\r\n        alert(\"Old password is incorrect or update failed.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"An error occurred while updating the password.\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setCredentials({ ...credentials, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showPassModal && (\r\n        <div\r\n          className=\"modal fade show\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          style={{ display: 'block' }}\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className={`modal-content ${darkMode ? 'bg-dark text-light' : 'bg-light text-dark'}`}>\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Update Password</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setShowPassModal(false)}\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"oldpassword\" className=\"form-label\">Enter old password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"oldpassword\"\r\n                      name=\"oldpassword\"\r\n                      value={credentials.oldpassword}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"newpassword1\" className=\"form-label\">Enter new password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"newpassword1\"\r\n                      name=\"newpassword1\"\r\n                      value={credentials.newpassword1}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"newpassword2\" className=\"form-label\">Confirm new password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"newpassword2\"\r\n                      name=\"newpassword2\"\r\n                      value={credentials.newpassword2}\r\n                      onChange={onChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <button type=\"submit\" className=\"m-3 btn btn-primary\">Submit</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}